{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Qwerty\\\\job-listing-app\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport data from './assets/data.json';\nimport JobBoardComponent from './components/JobBoardComponent';\n\nfunction App() {\n  const [jobs, setJobs] = useState([]);\n  const [filters, setFilters] = useState(['CSS']);\n  useEffect(() => setJobs(data), []);\n\n  const handleTagClick = tag => {\n    if (filters.includes(tag)) return;\n    setFilters([...filters, tag]);\n  };\n\n  const filterFunc = ({\n    role,\n    level,\n    tools,\n    languages\n  }) => {\n    const tags = [role, level];\n\n    if (filters.length === 0) {\n      return true;\n    }\n\n    if (tools) {\n      tags.push(...tools);\n    }\n\n    if (languages) {\n      tags.push(...languages);\n    }\n\n    return tags.some(tag => filters.includes(tag));\n  };\n\n  const handleFilterClick = passedFilter => {\n    setFilters(filters.filter(f => f !== passedFilter));\n  };\n\n  const clearFilters = () => {\n    setFilters([]);\n  };\n\n  const filteredJobs = jobs.filter(filterFunc);\n  useEffect(() => setJobs(data), []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"bg-teal-500 mb-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"w-full\",\n    src: \"/images/bg-header-desktop.svg\",\n    alt: \"bg-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, filters.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: `flex bg-white\n          shadow-md my-16 mb-20 \n          mx-10 p-6 rounded z-10 relative\n          `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, filters.map(filter => /*#__PURE__*/React.createElement(\"span\", {\n    className: \"cursor-pointer\\r font-bold mr-4 mb-4\\r rounded text-teal-500 \\r bg-teal-100 lg:mb-0\",\n    onClick: () => handleFilterClick(filter),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, filter)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clearFilters,\n    className: \"font-bold text-gray-700 ml-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Clear\")), jobs.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"jobs are fetchhing...\") : filteredJobs.map(job => /*#__PURE__*/React.createElement(JobBoardComponent, {\n    job: job,\n    key: job.id,\n    handleTagClick: handleTagClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 40\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Qwerty/job-listing-app/src/App.js"],"names":["React","useState","useEffect","data","JobBoardComponent","App","jobs","setJobs","filters","setFilters","handleTagClick","tag","includes","filterFunc","role","level","tools","languages","tags","length","push","some","handleFilterClick","passedFilter","filter","f","clearFilters","filteredJobs","map","job","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport data from './assets/data.json'\r\nimport JobBoardComponent from './components/JobBoardComponent'\r\n\r\nfunction App() {\r\n  const [jobs, setJobs] = useState([])\r\n  const [filters, setFilters] = useState(['CSS']);\r\n\r\n  useEffect(() => setJobs(data), []);\r\n  const handleTagClick = (tag) => {\r\n    if (filters.includes(tag)) return;\r\n    setFilters([...filters, tag])\r\n  }\r\n\r\n\r\n  const filterFunc = ({ role, level, tools, languages }) => {\r\n    const tags = [role, level]\r\n    if (filters.length === 0) {\r\n      return true\r\n    }\r\n    if (tools) {\r\n      tags.push(...tools)\r\n    }\r\n    if (languages) {\r\n      tags.push(...languages)\r\n    }\r\n\r\n    return tags.some(tag => filters.includes(tag));\r\n  }\r\n\r\n  const handleFilterClick = (passedFilter) => {\r\n    setFilters(filters.filter((f) => f !==\r\n      passedFilter))\r\n  }\r\n\r\n  const clearFilters = () => {\r\n    setFilters([])\r\n  }\r\n\r\n\r\n  const filteredJobs = jobs.filter(filterFunc)\r\n\r\n\r\n  useEffect(() =>\r\n    setJobs(data)\r\n    , []);\r\n\r\n  return (\r\n    <>\r\n      <header className=\"bg-teal-500 mb-12\">\r\n        <img className=\"w-full\"\r\n          src=\"/images/bg-header-desktop.svg\" alt=\"bg-image\" />\r\n      </header>\r\n      <div className=\"container m-auto\">\r\n\r\n        {filters.length > 0 && (\r\n\r\n          <div className={`flex bg-white\r\n          shadow-md my-16 mb-20 \r\n          mx-10 p-6 rounded z-10 relative\r\n          `}>\r\n            {filters.map((filter) => (\r\n              <span className=\"cursor-pointer\r\n               font-bold mr-4 mb-4\r\n              rounded text-teal-500 \r\n              bg-teal-100 lg:mb-0\" onClick={() =>\r\n                  handleFilterClick(filter)}>\r\n\r\n                {filter}\r\n              </span>\r\n            ))}\r\n\r\n            <button onClick={clearFilters}\r\n              className=\"font-bold text-gray-700 ml-auto\">\r\n              Clear</button>\r\n          </div>\r\n        )}\r\n\r\n        {jobs.length === 0 ? (\r\n          <p>jobs are fetchhing...</p>\r\n        ) : (\r\n            filteredJobs.map((job) => (<JobBoardComponent\r\n              job={job}\r\n              key={job.id}\r\n              handleTagClick={handleTagClick}\r\n            />)\r\n            )\r\n          )\r\n\r\n        }\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}